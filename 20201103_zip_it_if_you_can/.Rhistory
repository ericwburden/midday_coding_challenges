?mapply
list1 <- c("Elise", "Mary")
list2 <- c("John", "Rick")
mapply(c, list1, list2)
mapply(list, list1, list2)
mapply(list, list1, list2, SIMPLIFY = F)
mapply(c, list1, list2, SIMPLIFY = F)
mapply(c, list1, list2, SIMPLIFY = F, USE.NAMES = F)
x <- mapply(c, list1, list2, SIMPLIFY = F, USE.NAMES = F)
list1 <- c("Elise", "Mary", 'Janey')
list2 <- c("John", "Rick")
x <- mapply(c, list1, list2, SIMPLIFY = F, USE.NAMES = F)
length(x)
lapply(x, length)
unique(lapply(x, length))
unique(lapply(x, type))
unique(lapply(x, typeof))
unique(sapply(x, typeof))
#' Pretty printing for test cases
pprint <- function(c){
paste0(
'input: [', paste(c$input, collapse = ', '),'], ',
'output: [', paste(c$output, collapse = ', '),'], '
)
}
#' List of valid test cases
test_cases <- list(
list(
input = list(c("Elise", "Mary"), c("John", "Rick")),
output = list(c("Elise", "John"), c("Mary", "Rick"))
),
list(
input = list(c("Ana", "Amy", "Lisa"), c("Bob", "Josh")),
output = "sizes don't match"
),
list(
input = list(c("Ana", "Amy", "Lisa"), c("Bob", "Josh", "Tim")),
output = list(c("Ana", "Bob"), c("Amy", "Josh"), c("Lisa", "Tim"))
)
)
pprint(tests_cases[1])
pprint(test_cases[1])
pprint(test_cases[[1]])
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
?do.call
run_test(test_cases[[1]], zip_it)
substitute(zip_it)
do.call(test_cases[[1]]$input, zip_it)
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
do.call(zip_it, test_cases[[1]]$input)
?sapply
zip_it(test_cases[[1]])
x <- zip_it(test_cases[[1]])
x <- zip_it(test_cases[[1]]$input)
?do.call
do.call(zip_it, test_cases[[1]]$input)
do.call(zip_it, test_cases[1]$input)
test_cases[1]
test_cases[[1]
]
test_cases[[1]]$input
do.call(zip_it, list(c("Elise", "Mary"), c("John", "Rick")))
do.call(zip_it, list(a = c("Elise", "Mary"), b = c("John", "Rick")))
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
zip_it(test_cases[[1]]$input)
zip_it(unlist(test_cases[[1]]$input))
zip_it(test_cases[[1]]$input[[1]], test_cases[[1]]$input[[2]])
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
x == x
mapply('==', x[[1]], x[[2]])
mapply('==', x[[1]], x[[2]], simplify = T)
mapply('==', x[[1]], x[[2]], SIMPLIFY = T)
mapply('==', x[[1]], x[[2]], SIMPLIFY = F)
mapply('==', x[1], x[2], SIMPLIFY = F)
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
source('~/projects/midday_coding_challenges/20201103_zip_it_if_you_can/zip_it_if_you_can.R')
