runif(4, 0, 9)
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(4, 0, 9))
round(runif(1, 200, 999))
paste0('(', runif(1, 200, 999), ') ', runif(1, 212, 919), ' - ', round(runif(4, 0, 9)))
paste0('(', round(runif(1, 200, 999)), ') ', round(runif(1, 212, 919)), ' - ', round(runif(4, 0, 9)))
paste0('(', round(runif(1, 200, 999)), ') ', round(runif(1, 212, 919)), ' - ', paste(round(runif(4, 0, 9)), collapse = ''))
runif(256, 0, 9)
as.hexmode(runif(256, 0, 9))
as.hexmode(round(runif(256, 0, 9)))
require('magrittr')
libraries <- c('magrittr')
lapply(libraries, load_library)
load_library <- function(lib_name) {
if (!(require(lib_name))) {
stop(paste(lib_name, 'is a required library for this script.'))
}
}
lapply(libraries, load_library)
require('magrittr')
load_library <- function(lib_name) {
if (!(require(lib_name, character.only = T))) {
stop(paste(lib_name, 'is a required library for this script.'))
}
}
lapply(libraries, load_library)
paste0('(', round(runif(1, 200, 999)), ') ') %>%
paste(round(runif(1, 212, 919)), '- ') %>%
paste(round(runif(4, 0, 9)), collapse = '')
paste0('(', round(runif(1, 200, 999)), ') ') %>%
paste(round(runif(1, 212, 919)), '- ') %>%
paste(paste(round(runif(4, 0, 9)), collapse = ''))
runif(256, 0, 9) %>%
round() %>%
paste(collapse = '') %>%
as.hexmode()
runif(256, 0, 9) %>%
round() %>%
paste(collapse = '') %>%
as.integer() %>%
as.hexmode()
runif(256, 0, 9) %>%
round() %>%
paste(collapse = '') %>%
as.integer()
runif(256, 0, 9) %>%
round() %>%
paste(collapse = '')
runif(128, 0, 9) %>%
round() %>%
paste(collapse = '') %>%
as.integer()
runif(64, 0, 99) %>%
round() %>%
as.hexmode()
runif(64, 0, 99) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '')
runif(32, 0, 99) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '')
runif(32, 0, 99) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '') %>%
paste0('@fake.email')
random_email_address <- function() {
runif(32, 0, 99) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '') %>%
paste0('@fake.email')
}
runif(32, 0, 99) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '') %>%
paste0('@fake.email')
libraries <- c('magrittr', 'dplyr', 'readr')
lapply(libraries, load_library)
csv_data <- readr::read_csv('people.csv')
View(csv_data)
baby_names <- read_csv('BabyNamesState_babyNamesUS.csv')
View(baby_names)
first_names <- read_lines('first_names.txt')
saveRDS('first_names.rds')
saveRDS(first_names, 'first_names.rds')
last_names <- read_lines('last_names.txt')
saveRDS(last_names, 'last_names.rds')
saveRDS(last_names[[1]], 'last_names.rds')
last_names
last_names[[1]]
saveRDS(last_names, 'last_names.rds')
first_names[round(runif(1, 1, length(first_names)))]
readr::read_csv('people.csv') %>%
mutate(
FirstName = replace(is.na(FirstName), random_name(first_name_list)),
LastName = replace(is.na(LastName), random_name(last_name_list))
)
?replace
readr::read_csv('people.csv') %>%
mutate(
FirstName = replace(FirstName, is.na(FirstName), random_name(first_name_list)),
LastName = replace(LastName, is.na(LastName), random_name(last_name_list))
)
readr::read_csv('people.csv') %>%
mutate(
backkup_first_name = random_name(first_name_list)
)
random_name <- function(name_list) {
randi <- round(runif(1, 1, length(name_list)))
name_list[randi]
}
random_phone_number <- function() {
paste0('(', round(runif(1, 200, 999)), ') ') %>%
paste(round(runif(1, 212, 919)), '- ') %>%
paste(paste(round(runif(4, 0, 9)), collapse = ''))
}
random_email_address <- function() {
runif(32, 0, 99) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '') %>%
paste0('@fake.email')
}
random_name <- function(name_list) {
randi <- round(runif(1, 1, length(name_list)))
name_list[randi]
}
load_library <- function(lib_name) {
if (!(require(lib_name, character.only = T))) {
stop(paste(lib_name, 'is a required library for this script.'))
}
}
readr::read_csv('people.csv') %>%
mutate(
backkup_first_name = random_name(first_name_list)
)
# Name lists derived from https://github.com/smashew/NameDatabases
first_name_list <- readRDS('first_names.rds')
last_name_list <- readRDS('last_names.rds')
readr::read_csv('people.csv') %>%
mutate(
backkup_first_name = random_name(first_name_list)
)
readr::read_csv('people.csv') %>%
mutate(
FirstName = replace(FirstName, is.na(FirstName), random_name(first_name_list))
)
readr::read_csv('people.csv') %>%
mutate(
FirstName = replace(FirstName, is.na(FirstName), random_name(first_name_list)),
LastName = replace(LastName, is.na(LastName), random_name(last_name_list)),
phone_number = random_phone_number(),
email_address = random_email_address()
)
result <- complete_csv('people.csv')
source('~/projects/midday_coding_challenges/20201015_complete_csv/complete_csv.R')
summary(result)
glimpse(result)
source('~/projects/midday_coding_challenges/20201015_complete_csv/complete_csv.R')
View(result)
View(csv_data)
source('~/projects/midday_coding_challenges/20201015_complete_csv/complete_csv.R')
View(result)
readr::read_csv(file_path) %>%
mutate(
FirstName = replace_missing_name(FirstName, first_name_list),
LastName = replace_missing_name(LastName, last_name_list),
phone_number = runif(1, 0, 9),
email_address = random_email_address()
)
source('~/projects/midday_coding_challenges/20201015_complete_csv/complete_csv.R')
View(result)
View(result)
file_path <- 'people.csv'
x <- readr::read_csv(file_path)
x$FirstName
replace_missing_name(x$FirstName)
replace_missing_name(x$FirstName, first_name_list)
?sample
random_email_address
random_email_address()
rep(5, random_email_address())
rep(5, random_email_address
)
?rep
rep(random_email_address(), 5)
rep(random_email_address, 5)
lapply(c(1:10), random_email_address())
lapply(c(1:10), random_email_address
)
lapply(c(1:10), random_email_address)
?replicate
replicate(10, random_email_address())
?coalesce
source('~/projects/midday_coding_challenges/20201015_complete_csv/complete_csv.R')
View(result)
nrow(distinct(result))
length(result) == length(unique(result))
length(result$phone_number) == length(unique(result$phone_number))  # TRUE
length(result$email_address) == length(unique(result$email_address))  # TRUE
View(result)
runif(32, 0, 255) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '') %>%
paste0('@fake.email')
runif(32, 0, 255) %>%
round() %>%
as.hexmode() %>%
paste(collapse = '') %>%
paste0('@fake.email')
