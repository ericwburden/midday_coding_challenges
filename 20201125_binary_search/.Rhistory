1280*2*2
source('~/projects/midday_coding_challenges/20201125_binary_search/test_small_vec_with_without_mi.R', echo=TRUE)
#' Normalizing the results helps to visualize them on a chart. I ended up
#' removing the top and bottom of the partition range since those values were
#' bad enough they made it difficult to tell the differences between performance
#' for partitions in the middle of the range on the chart.
normalized_tally <- final_tally %>%
group_by(length) %>%
mutate(norm_rounds = mean_rounds/max(mean_rounds)) %>%
ungroup()
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1) +
theme_minimal() +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the Magic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the Magic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the Magic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(legend.position = c(1, 1)) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the Magic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(legend.position = c(.8, .8)) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the Magic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(legend.position = c(.85, .85)) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the Magic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(legend.position = c(.85, .85)) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(legend.position = c(.9, .875)) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(legend.position = c(.95, .875)) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(legend.position = c(.925, .875)) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .875),
legend.background = element_rect(fill = 'white', size = 0.5, alpha = 0.5)
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .875),
legend.background = element_rect(fill = 'white', size = 0.5,)
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .875),
legend.background = element_rect(fill = 'white', size = 0.5)
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5)
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths'
)
source('~/projects/midday_coding_challenges/20201125_binary_search/test_small_vec_with_without_mi.R', echo=TRUE)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5)
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths',
caption = 'Each combination of vector length and partition value was tested 10,000 times to obtain these results'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5),
plot.caption = element_text(color = "darkgray")
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths',
caption = 'Each combination of vector length and partition value was tested 10,000 times to obtain these results'
)
?element_text
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5),
plot.caption = element_text(color = "darkgray", face = "italic", margin = margin(t = 10))
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths',
caption = 'Each combination of vector length and partition value was tested 10,000 times to obtain these results'
)
?colors
colors
colors()
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5),
plot.caption = element_text(color = "gray80", face = "italic", margin = margin(t = 10))
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths',
caption = 'Each combination of vector length and partition value was tested 10,000 times to obtain these results'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5),
plot.caption = element_text(color = "gray90", face = "italic", margin = margin(t = 10))
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths',
caption = 'Each combination of vector length and partition value was tested 10,000 times to obtain these results'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5),
plot.caption = element_text(color = "gray50", face = "italic", margin = margin(t = 10))
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths',
caption = 'Each combination of vector length and partition value was tested 10,000 times to obtain these results'
)
#' Visualization!
ggplot(normalized_tally, aes(part, norm_rounds, color = found_mi)) +
geom_point() +
geom_line() +
facet_wrap(~ length, nrow = 1, labeller = label_both) +
theme_minimal() +
scale_color_manual(values = c('goldenrod', 'navyblue')) +
theme(
legend.position = c(.925, .85),
legend.background = element_rect(fill = 'white', size = 0.5),
plot.caption = element_text(color = "gray25", face = "italic", margin = margin(t = 10))
) +
labs(
x = 'Partition Value',
y = 'Normalized # of Rounds',
color = "Found the\nMagic Index",
title = 'Effect of Partition and Vector Length on Binary Search',
subtitle = 'Higher partition values yield faster searches at lower vector lengths',
caption = 'Each combination of vector length and partition value was tested 10,000 times to obtain these results'
)
source('~/projects/midday_coding_challenges/20201125_binary_search/binary_search.R', echo=TRUE)
test_run_rounds(valid_vector(1000000), .5)
542 %% 10
542 %/% 10
log10(542)
log10(6542)
log10(1000)
log10(9999)
source('~/projects/midday_coding_challenges/20201125_binary_search/binary_search.R', echo=TRUE)
test_run_rounds(valid_vector(1310720), .5)
source('~/projects/midday_coding_challenges/20201125_binary_search/test_small_vec_with_without_mi.R', echo=TRUE)
source('~/projects/midday_coding_challenges/20201125_binary_search/test_small_vec_with_without_mi.R', echo=TRUE)
