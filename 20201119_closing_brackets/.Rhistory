s <- "({hi}[hello])[({bye})]"
strsplit(s, '')
char_vecs <- strsplit(s, '')
grep('[\\[\\]\\(\\)\\{\\}]', char_vecs[1])
grep('[\\[\\]\\(\\)\\{\\}]', char_vecs[[1]])
grep('\\[', char_vecs[[1]])
grep('[\\[]', char_vecs[[1]])
grep('[\\[\\]]', char_vecs[[1]])
grep('\\[|\\]', char_vecs[[1]])
?lapply
bracket_strs <- c('[', ']', '(', ')', '{', '}')
paste(bracket_strs, collapse = '|\\')
?paste
paste0('\\', paste(bracket_strs, collapse = '|\\'))
brackets <- lapply(char_vecs, function(x) grep("\\[|\\]|\\(|\\)|\\{|\\}", x))
char_vecs <- strsplit(s, '')
bracket_list <- lapply(char_vecs, function(x) grep("\\[|\\]|\\(|\\)|\\{|\\}", x))
bracket_list <- lapply(char_vecs, function(x) x[grep("\\[|\\]|\\(|\\)|\\{|\\}", x)])
only_brackets <- lapply(bracket_list, paste)
only_brackets <- lapply(bracket_list, paste, collapse = '')
only_brackets <- lapply(bracket_list, paste)
only_brackets <- lapply(bracket_list, paste, collapse = "")
z <- s
s <- "hello"
char_vecs <- strsplit(s, '')
bracket_list <- lapply(char_vecs, function(x) x[grep("\\[|\\]|\\(|\\)|\\{|\\}", x)])
only_brackets <- lapply(bracket_list, paste, collapse = "")
any(lapply(only_brackets, "==", ""))
any(sapply(only_brackets, "==", ""))
s <- z
char_vecs <- strsplit(s, '')
bracket_list <- lapply(char_vecs, function(x) x[grep("\\[|\\]|\\(|\\)|\\{|\\}", x)])
only_brackets <- lapply(bracket_list, paste, collapse = "")
any(sapply(only_brackets, "==", ""))
?len
??len
len
?gsub
bs <- only_brackets[[1]]
gsub("\\[\\]|\\(\\)|\\{\\}", '', bs)
source('~/projects/midday_coding_challenges/20201119_closing_brackets/closing_brackets.R', echo=TRUE)
closed_brackets(s)
check_brackets(only_brackets[[1]])
check_brackets(only_brackets[[1]])
check_brackets <- function(bs) {
if (length(bs) == 0) { return(TRUE) }
pairs_out <- gsub("\\[\\]|\\(\\)|\\{\\}", '', bs)
print(paste(paste(bs, collapse = ','), '-', paste(pairs_out, collapse = ',')))
if (length(bs) == length(pairs_out)) { return(FALSE) }
check_brackets(pairs_out)
}
check_brackets(only_brackets[[1]])
check_brackets <- function(bs) {
if (nchar(bs) == 0) { return(TRUE) }
pairs_out <- gsub("\\[\\]|\\(\\)|\\{\\}", '', bs)
print(paste(paste(bs, collapse = ','), '-', paste(pairs_out, collapse = ',')))
if (nchar(bs) == nchar(pairs_out)) { return(FALSE) }
check_brackets(pairs_out)
}
check_brackets(only_brackets[[1]])
closed_brackets(s)
source('~/projects/midday_coding_challenges/20201119_closing_brackets/closing_brackets.R', echo=TRUE)
closed_brackets(s)
s <- c(s, '{{yo, dude{)')
closed_brackets(s)
closed_brackets(s)
s <- c(s, '{{yo, dude{)', 'tacos')
closed_brackets(s)
z
library(testthat)
s1 <- "([])[]({})"
s2 <- "(x + (y * z))"
s3 <- "({hi}[hello])[({bye})]"
s4 <- "(([[))]]"
s5 <- "no brackets"
expect_equal(closed_brackets(s1), TRUE)
expect_equal(closed_brackets(c(s1, s2)), c(TRUE, TRUE))
expect_equal(closed_brackets(s4), FALSE)
expect_equal(closed_brackets(c(s1, s2, s3, s4)), c(TRUE, TRUE, FALSE, TRUE))
