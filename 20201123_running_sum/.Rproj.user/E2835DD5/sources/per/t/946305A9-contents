---
title: "Running Sum"
output: learnr::tutorial
runtime: shiny_prerendered
---

```{r setup, include=FALSE}
library(learnr)
library(testthat)
knitr::opts_chunk$set(echo = FALSE)
```


### Implementation

- If the vector is empty or a single value: return the input
- If the vector contains multiple values:
    - for each index `n` from 1 to the length of the input
      - calculate the sum of all numbers up to `n`

```{r implementation, echo=TRUE}
running_sum <- function(i) {
  if (length(i) <= 1) { i } else {
    sapply(seq(length(i)), function(n) { sum(i[1:n]) })
  }
}
```


### Run Tests

Feel free to add/adjust tests to see what breaks!

```{r run-tests, echo=TRUE, exercise=TRUE}
tests_passed <- test_that("running_sum() returns expected results", {
  expect_equal(running_sum(c(1, 2, 3, 4)), c(1, 3, 6, 10))
  expect_equal(running_sum(c(1, 1, 1, 1, 1)), c(1, 2, 3, 4, 5))
  expect_equal(running_sum(c(3, 1, 2, 10, 1)), c(3, 4, 6, 16, 17))
  expect_equal(running_sum(100), 100)
  expect_equal(running_sum(integer(0)), integer(0))
})

if (tests_passed) { cat('SUCCESS!!') }
```