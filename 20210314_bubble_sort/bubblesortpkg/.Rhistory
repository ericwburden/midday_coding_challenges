renv::activate()
renv::install("usethis")
usethis::use_mit_license()
usethis::use_mit_license("Eric Burden")
renv::install("roxygen2")
renv::install("testthat")
1e100
1e100 + 1
1e100 /10
n <- round(runif(1e100, 0, 1e100))
n <- round(runif(1e100, 0, 1e100), 0)
runif(1e100, 0, 1e100)
?runif
runif(1e100)
runif(100000)
100_000
100'000
''
100,000
?trunc
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
usethis::use_test("bubble_sort")
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
sort(runif(100))
renv::install("microbenchmark")
?microbenchmark
??microbenchmark
input <- as.integer(trunc(runif(100000, 0, 100000)))
bubble_sort_r(input)
input <- as.integer(trunc(runif(1000, 0, 1000)))
bubble_sort_r(input)
library(bubblesortpkg)
input <- as.integer(trunc(runif(1000, 0, 1000)))
benchmark <- microbenchmark::microbenchmark(
bubble_sort_rust(input),
bubble_sort_r(input)
)
boxplot(benchmark)
plot(benchmakr)
plot(benchmark)
print(benchmark)
library(bubblesortpkg)
?runif
??microbenchmark
usethis::use_package("microbenchmark")
library(bubblesortpkg)
bubble_bench
bubble_bench()
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
0:100
library(bubblesortpkg)
library(bubblesortpkg)
library(bubblesortpkg)
nums <- as.integer(trunc(stats::runif(1000, 0, 1000)))
n <- length(nums)
for (i in 1:(n-1)) {
for (j in 1:(n - i - 1)) {
if (nums[j] > nums[j + 1]) {
temp <- nums[j]
nums[j] <- nums[j + 1]
nums[j + 1] <- temp
}
}
}
for (i in 1:(n-1)) {
for (j in 1:(n - i)) {
if (nums[j] > nums[j + 1]) {
temp <- nums[j]
nums[j] <- nums[j + 1]
nums[j + 1] <- temp
}
}
}
library(bubblesortpkg)
library(bubblesortpkg)
bubble_bench()
